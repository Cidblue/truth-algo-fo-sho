# Truth Algorithm - Conceptual Framework

## Core Principles
The Truth Algorithm evaluates statements based on logical consistency, factual accuracy, and source credibility. It identifies both negative indicators (outpoints) and positive indicators (pluspoints) to determine the reliability of information.

## Process Flow
1. Statement Collection
   - Gather statements with metadata (source, time, context)
   - Normalize and preprocess text

2. Individual Statement Analysis
   - Apply outpoint rules to detect logical inconsistencies
   - Apply pluspoint rules to identify positive indicators
   - Calculate preliminary truth score
   - Use RAG system to retrieve relevant context from knowledge base
   - Apply LLM-based evaluation with confidence scoring

3. Multi-Layer Classification Approach
   - Layer 1: Regex/heuristic rules for high-precision pattern matching
   - Layer 2: DeBERTa classifier for efficient semantic understanding
   - Layer 3: LLM-based evaluation with RAG for complex cases
   - Confidence thresholds determine which layer handles evaluation

4. Relational Analysis
   - Build knowledge graph of statements
   - Identify contradictions between statements
   - Detect supporting evidence relationships
   - Cluster related problematic statements

5. Classification and Reporting
   - Traffic light system (red/yellow/green) for statement reliability
   - Provide evidence and reasoning for classifications
   - Generate actionable insights and follow-up questions
   - Confidence scoring for all evaluations

## Outpoints (Negative Indicators)
1. Omitted Data - Missing crucial information
2. Altered Sequence - Events out of logical order
3. Dropped Time - Missing timestamps when others have them
4. Falsehood - Demonstrably untrue statements
5. Altered Importance - Exaggeration or minimization
6. Wrong Target - Misplaced blame or focus
7. Wrong Source - Unreliable information origin
8. Contrary Facts - Direct contradictions
9. Added Time - Unnecessary or incorrect time data
10. Added Inapplicable Data - Irrelevant information
11. Incorrectly Included Datum - Data that doesn't belong
12. Assumed Identities Not Identical - False equivalences
13. Assumed Similarities Not Similar - False analogies
14. Assumed Differences Not Different - False distinctions

## Pluspoints (Positive Indicators)
1. Related Facts Known - Supporting evidence exists
2. Events in Correct Sequence - Logical order of events
3. Time Noted - Proper timestamps provided
4. Data Proven Factual - Verified by reliable sources
5. Correct Relative Importance - Proper emphasis
6. Expected Time Period - Appropriate timeframes
7. Adequate Data - Sufficient information provided
8. Applicable Data - Relevant information
9. Correct Source - Reliable information origin
10. Correct Target - Proper attribution
11. Data in Same Classification - Consistent categorization
12. Identities Are Identical - Proper equivalences
13. Similarities Are Similar - Valid comparisons
14. Differences Are Different - Valid distinctions

## Implementation Details
1. LLM Integration
   - Custom-trained "truth-evaluator" model based on Investigations methodology
   - Prompt engineering for each outpoint and pluspoint rule
   - Confidence scoring for evaluation reliability
   - Batch processing for efficient evaluation

2. RAG System
   - Vector database of Investigations knowledge
   - Context retrieval for each evaluation
   - Dynamic prompt enhancement with relevant information
   - Citation of knowledge sources in reasoning

3. Caching System
   - Persistent storage of evaluation results
   - Reduced API calls for repeated evaluations
   - Performance optimization

4. Evaluation Metrics
   - Outpoint and pluspoint detection rates
   - Confidence scoring distribution
   - Context relevance measurement
   - Inter-layer agreement analysis

5. Classification Pipeline
   - Orchestrates all evaluation layers
   - Applies confidence thresholds
   - Combines results from multiple layers
   - Generates final classification with explanation

## Future Directions
1. Multi-modal analysis capabilities
2. Domain-specific knowledge bases and rule sets
3. Collaborative verification mechanisms
4. Enhanced explanation generation
5. Automated follow-up question generation

